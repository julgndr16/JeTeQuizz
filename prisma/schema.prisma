generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Game {
  id      Int      @id @default(autoincrement())
  score   Int
  date    DateTime @db.DateTime(0)
  idQuizz Int
  idUser  Int
  Quizz   Quizz    @relation(fields: [idQuizz], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idQuizzGame")
  User    User     @relation(fields: [idUser], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idUserGame")

  @@index([idQuizz], map: "fk_idQuizzGame")
  @@index([idUser], map: "fk_idUserGame")
}

model Question {
  id                                     Int        @id @default(autoincrement())
  name                                   String     @db.Text
  idGoodRep                              Int
  idQuizz                                Int

  Response_Question_idGoodRepToResponse  Response   @relation("Question_idGoodRepToResponse", fields: [idGoodRep], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idGoodRep")

  Quizz                                  Quizz      @relation(fields: [idQuizz], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_quizzquestt")
  Response_Response_idQuestionToQuestion Response[] @relation("Response_idQuestionToQuestion")

  @@index([idGoodRep], map: "fk_idGoodRep")
  @@index([idQuizz], map: "fk_quizzquestt")
}

model Quizz {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  level     Int
  nbQuest   Int
  idCreator Int
  Game      Game[]
  Question  Question[]
  User      User       @relation(fields: [idCreator], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_idCreator")

  @@index([idCreator], map: "fk_idCreator")
}

model Response {
  id                                     Int        @id @default(autoincrement())
  name                                   String     @db.Text
  idQuestion                             Int
  Question_Question_idGoodRepToResponse  Question[] @relation("Question_idGoodRepToResponse")
  Question_Response_idQuestionToQuestion Question   @relation("Response_idQuestionToQuestion", fields: [idQuestion], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_resp")

  @@index([idQuestion], map: "fk_resp")
}

model User {
  id     Int     @id @default(autoincrement())
  pseudo String  @db.VarChar(50)
  mail   String  @db.VarChar(200)
  token  String  @db.Text
  Game   Game[]
  Quizz  Quizz[]
}
